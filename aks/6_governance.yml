apiVersion: v1
kind: Service
metadata: 
  name: backend
spec:
  ports:
  - port: 80
  selector:
    app: backend
---
apiVersion: v1
kind: Service
metadata: 
  name: frontend
spec:
  ports:
  - port: 80
  selector:
    app: frontend
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: backend
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: backend
        aadpodidbinding: demo
    spec:
      containers:
      - name: backend
        image: desdemoregistry.azurecr.io/adv-msi/backend:latest
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: 250m
          limits:
            cpu: 350m
        livenessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
        envFrom:
        - configMapRef:
            name: people-config
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: frontend
        aadpodidbinding: demo
    spec:
      containers:
      - name: frontend
        image: desdemoregistry.azurecr.io/adv-msi/frontend:latest
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: 300m
          limits:
            cpu: 350m
        livenessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
        envFrom:
        - configMapRef:
            name: people-config
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Development"
        - name: isInCluster
          value: "true"
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: people
  annotations:
    kubernetes.io/ingress.class: addon-http-application-routing
spec:
  tls:
  - hosts:
    - ... your domain here ...
    secretName: tls-people-secret
  rules:
  - host: ... your domain here ...
    http:
      paths:
      - backend:
          serviceName: frontend
          servicePort: 80
        path: /